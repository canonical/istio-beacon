# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, static-charm, static-lib, unit, scenario
min_version = 4.0.0

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
lib_path = {tox_root}/lib/charms/istio_beacon_k8s
all_path = {[vars]src_path} {[vars]tests_path} {[vars]lib_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    ruff check --fix {[vars]all_path}
    black {[vars]all_path}
    ruff check --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    codespell
    pydantic
    ruff
commands =
    codespell {[vars]src_path}
    codespell {[vars]lib_path}
    ruff check {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    pytest-mock
    coverage[toml]
    -r {tox_root}/requirements.txt
commands =
    coverage run \
      --source={[vars]src_path} \
      -m pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/unit
    coverage report -m

[testenv:scenario]
description = Run scenario tests
deps =
    coverage[toml]
    ops-scenario
    pydantic
    pytest
    -r {tox_root}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {posargs} \
                 {[vars]tests_path}/scenario
    coverage report

[testenv:static-{charm,lib}]
description = Run static type checks
deps =
    pyright
    lib: pydantic
    -r {tox_root}/requirements.txt
commands =
    charm: pyright {posargs} {[vars]src_path}
    lib: pyright {posargs} {[vars]lib_path}

[testenv:integration]
description = Run integration tests
deps =
    pytest
    juju
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -v \
           -s \
           --tb native \
           --log-cli-level=INFO \
           {posargs} \
           {[vars]tests_path}/integration
