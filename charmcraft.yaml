name: istio-beacon-k8s
type: charm
title: Istio Beacon
summary: A beacon charm used for joining the Istio service mesh.

description: |
  A single sentence that says what the charm is, concisely and memorably.

  A paragraph of one to three short sentences, that describe what the charm does.

  A third paragraph that explains what need the charm meets.

  Finally, a paragraph that describes whom the charm is useful for.

assumes:
  - k8s-api

bases:
  - build-on:
    - name: ubuntu
      channel: "22.04"
      architectures: ["amd64"]
    run-on:
    - name: ubuntu
      channel: "22.04"
      architectures: ["amd64"]
  - build-on:
    - name: ubuntu
      channel: "22.04"
      architectures: ["arm64"]
    run-on:
    - name: ubuntu
      channel: "22.04"
      architectures: ["arm64"]

containers:
  metrics-proxy:
    resource: metrics-proxy-image

requires:
  charm-tracing:
    interface: tracing
    description: |
      Endpoint for integrating over a `tracing` interface and sending charm traces 
      to a distributed tracing backend such as Tempo.

provides:
  service-mesh:
    interface: service_mesh
  metrics-endpoint:
    interface: prometheus_scrape

parts:
  charm:
    charm-binary-python-packages:
      # Pydantic is not actually used by the lib but charmcraft install pydeps from libs even if
      # they are not used.
      - pydantic-core
      - pydantic
      - maturin
    plugin: charm
    build-packages: [git]

config:
  options:
    manage-authorization-policies:
      type: boolean
      default: true
      description: >
        Automatically create Istio authorization policies for any charm requiresting them over the service mesh 
        relation.  If set to false, the charm will not create any authorization policies, but will still do other 
        functions like provide a waypoint.
    model-on-mesh:
      type: boolean
      default: false
      description: >
        Add this charm's model to the service mesh. 
        All charms in this model will automatically be added to the mesh.
    ready-timeout:
      type: int
      default: 100
      description: >
        The maximum time (in seconds) to wait for the waypoint deployment to be 
        ready. This applies specifically to the deployment created for the Istio 
        waypoint controller. If the deployment does not become ready within this time, 
        charm will go into error state.

resources:
  metrics-proxy-image:
    type: oci-image
    description: Metrics Proxy OCI image
    # TODO: change below to point at the correct image once metrics-proxy rock is onboarded
    # see: https://github.com/canonical/oci-factory/issues/268
    upstream-source: docker.io/ibraaoad/metrics-proxy:v0.1.0